import datetime

from telebot import types
import telebot
import time
import os
import random
from config import BOT_TOKEN, URL, ANSWERS, ADMIN_ID, ANNOUNCEMENT, SAY
from assortiment import beer, cidre, crackers, knuts, fish, cheese, all_goods
from nick_names import NICK

"""
–ß—Ç–æ –±—ã –±–æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–ª - —Å–ª–µ–¥—É–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª config.py –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∑–∞–¥–∞—Ç—å —Ç–∞–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN
—Å–æ–¥–µ—Ä–∂–∞—â—É—é —Ç–æ–∫–µ–Ω –í–∞—à–µ–≥–æ –±–æ—Ç–∞. –¢–∞–∫ –∂–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é URL –≤ –∫–æ—Ç–æ—Ä–æ–π —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω—É–∂–Ω—ã–π –í–∞–º —Å–∞–π—Ç.

–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞:
start - –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É
help - –£–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
site - –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç

–ü–æ–ª–µ–∑–Ω—ã–µ emojis:
üß∫üõíüì≤üßøüéâüìñ

–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∞–¥–æ –¥–æ–∞–≤–∏—Ç—å –µ–µ –≤ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª —Å–ª–æ–≤–∞—Ä—è –≤ assortiment.py, –∞ –∑–∞—Ç–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é 
choose–ù–£–ñ–ù–´–ô_–¢–û–í–ê–† —Ç–∞–∫, —á—Ç–æ –±—ã —É –∫–Ω–æ–ø–∫–∏ –±—ã–ª–æ —Ç–∞–∫–æ–µ –∂–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á—Ç–æ –∏ —É –≤ —Å–ª–æ–≤–∞—Ä–µ. –¢–∞–∫ –∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–∫—É
–ø–æ —Ä–∞–∑–¥–µ–ª—É. –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ç–∫–∏ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—é –∫–Ω–æ–ø–∫–∏

–ü—Ä–æ–ø–∏—Å–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≥—Ä–∞–º–º —Ä—ã–±—ã –ø—Ä–æ–±–∏–≤–∞—Ç—å —á–µ—Ä–µ–∑ –∫–∞—Å—Å—É —á—Ç–æ –±—ã –±–∏–ª–æ —á–µ–∫

–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:
–ê–¥–µ–∫–≤–∞—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã
–ü–æ–¥—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã –∫–æ—Ä–∑–∏–Ω—ã
–û—á–∏—Å—Ç–∫—É –∫–æ—Ä–∑–∏–Ω—ã
–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –∞–¥–º–∏–Ω–∞–º –≤ –¢–ì
–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ –Ω–∞ –ø–æ—á—Ç—É
–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞
–ó–∞–ø—Ä–æ—Å –∫–æ–º–º–∞–Ω—Ç–∞—Ä–∏—è –∫ –∑–∞–∫–∞–∑—É
–ó–∞–ø—Ä–æ—Å –∞–¥—Ä–µ—Å–∞
"""

pennij_bot = telebot.TeleBot(BOT_TOKEN)

cart = {}

DIR = "memes"


# –ï—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ(–æ –∫–∞–∫–æ–π –ª–∏–±–æ –Ω–æ–≤–∏–Ω–∫–µ –∏–ª–∏ –∞–∫—Ü–∏–∏ –∏–ª–∏ –∏–ª–∏) –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ announcment –Ω—É–∂–Ω—ã–π —Ç–µ–∫—Å—Ç

@pennij_bot.message_handler(commands=["start"])
def welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('üçª –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç üêü')
    btn2 = types.KeyboardButton('üõü –ü–æ–º–æ—â—å')
    btn3 = types.KeyboardButton('üìÑ –ö–æ–Ω—Ç–∞–∫—Ç—ã')
    markup.row(btn1)
    markup.row(btn2, btn3)

    pennij_bot.send_message(message.chat.id,
                            f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>! "
                            f"–°–∫–æ—Ä–æ —Ç—É—Ç –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏–≤–æ –∏ —Ä—ã–±–∫—É ;)"
                            f"\n–ê –ø–æ–∫–∞ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∏ –∑–∞–∫–∞–∑–∞—Ç—å –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É",
                            parse_mode='html', reply_markup=markup)


@pennij_bot.message_handler(commands=["generate"])
def generateNickname(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton('/generate')
    btn2 = types.KeyboardButton('/start')
    markup.row(btn1, btn2)
    nm_p = os.path.join(DIR, random.choice(os.listdir(DIR)))
    random.shuffle(NICK)
    nick = random.choice(NICK)
    pic = open(nm_p, 'rb')
    print(message.from_user.first_name, nm_p, nick, datetime.datetime.now())
    pennij_bot.send_photo(message.chat.id, pic, f'<b>{nick}</b>', parse_mode='html', reply_markup=markup)


@pennij_bot.message_handler(commands=["site", "website"])
def redirect_to_site(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=URL))
    pennij_bot.send_message(message.chat.id, "–ê—Ö –¥–∞, –≤–æ—Ç —Å—Å—ã–ª–æ—á–∫–∞:", reply_markup=markup)


@pennij_bot.message_handler(commands=["help"])
def get_help(message):
    pennij_bot.send_message(message.chat.id,
                            "<b>–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ</b>: <u>/start</u> "
                            "\n<b>–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞:</b> <u>@repredess</u>",
                            parse_mode='html')


@pennij_bot.message_handler(func=lambda message: message.text in beer)
def beer_add(message):
    item = message.text
    markup_inline = telebot.types.InlineKeyboardMarkup()
    add_liter = telebot.types.InlineKeyboardButton('+1–ª', callback_data=f'+1.0 –ü–∏–≤–æ {item}')
    add_poltora = telebot.types.InlineKeyboardButton('+1.5–ª', callback_data=f'+1.5 –ü–∏–≤–æ {item}')
    remove_liter = telebot.types.InlineKeyboardButton('-1–ª', callback_data=f'-1.0 –ü–∏–≤–æ {item}')
    remove_poltora = telebot.types.InlineKeyboardButton('-1.5–ª', callback_data=f'-1.5 –ü–∏–≤–æ {item}')
    cart = telebot.types.InlineKeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data=f'shoppingCart')
    markup_inline.add(remove_liter, add_liter)
    markup_inline.add(remove_poltora, add_poltora)
    if beer[item]["–ü–æ–¥—Ä–æ–±–Ω–µ–µ"]:
        adress = telebot.types.InlineKeyboardButton('üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ', url=beer[item]["–ü–æ–¥—Ä–æ–±–Ω–µ–µ"])
        markup_inline.add(adress, cart)
    else:
        markup_inline.add(cart)
    try:
        pic = open(f"goods/pivo/{item}.jpg", 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<i><b>{item}</b> | {beer[item]["–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è"]}</i>'
                                                    f'\n{beer[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n'
                                                    f'\n–¶–µ–Ω–∞: {beer[item]["–¶–µ–Ω–∞"]}—Ä/–ª–∏—Ç—Ä | '
                                                    f'–ê–ª–∫–æ–≥–æ–ª—å: {beer[item]["–ê–ª–∫–æ–≥–æ–ª—å"]}',
                              reply_markup=markup_inline,
                              parse_mode='html')
    except FileNotFoundError:
        pic = open(f'goods/pivo/–ü–∏–≤–æ.jpg', 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<i><b>{item}</b> | {beer[item]["–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è"]}</i>'
                                                    f'\n{beer[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n'
                                                    f'\n–¶–µ–Ω–∞: {beer[item]["–¶–µ–Ω–∞"]}—Ä/–ª–∏—Ç—Ä | '
                                                    f'–ê–ª–∫–æ–≥–æ–ª—å: {beer[item]["–ê–ª–∫–æ–≥–æ–ª—å"]}',
                              reply_markup=markup_inline,
                              parse_mode='html')


@pennij_bot.message_handler(func=lambda message: message.text in cidre)
def cidre_add(message):
    item = message.text
    markup_inline = telebot.types.InlineKeyboardMarkup()
    add_liter = telebot.types.InlineKeyboardButton('+1–ª', callback_data=f'+1.0 –°–∏–¥—Ä {item}')
    add_poltora = telebot.types.InlineKeyboardButton('+1.5–ª', callback_data=f'+1.5 –°–∏–¥—Ä {item}')
    remove_liter = telebot.types.InlineKeyboardButton('-1–ª', callback_data=f'-1.0 –°–∏–¥—Ä {item}')
    remove_poltora = telebot.types.InlineKeyboardButton('-1.5–ª', callback_data=f'-1.5 –°–∏–¥—Ä {item}')
    cart = telebot.types.InlineKeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data=f'shoppingCart')
    markup_inline.add(remove_liter, add_liter)
    markup_inline.add(remove_poltora, add_poltora)
    markup_inline.add(cart)

    try:
        pic = open(f"goods/ciders/{item}.jpg", 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<i><b>{item}</b></i>'
                                                    f'\n{cidre[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n'
                                                    f'\n–¶–µ–Ω–∞: {cidre[item]["–¶–µ–Ω–∞"]}—Ä/–ª–∏—Ç—Ä | '
                                                    f'–ê–ª–∫–æ–≥–æ–ª—å: {cidre[item]["–ê–ª–∫–æ–≥–æ–ª—å"]}',
                              reply_markup=markup_inline,
                              parse_mode='html')
    except FileNotFoundError:
        pic = open(f'goods/pivo/–ü–∏–≤–æ.jpg', 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<i><b>{item}</b></i>'
                                                    f'\n{cidre[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n'
                                                    f'\n–¶–µ–Ω–∞: {cidre[item]["–¶–µ–Ω–∞"]}—Ä/–ª–∏—Ç—Ä | '
                                                    f'–ê–ª–∫–æ–≥–æ–ª—å: {cidre[item]["–ê–ª–∫–æ–≥–æ–ª—å"]}',
                              reply_markup=markup_inline,
                              parse_mode='html')


@pennij_bot.message_handler(func=lambda message: message.text in knuts)
def knuts_add(message):
    item = message.text
    markup_inline = telebot.types.InlineKeyboardMarkup()
    add_one = telebot.types.InlineKeyboardButton('+1—à—Ç', callback_data=f'+1 –ó–∞–∫—É—Å–∫–∞ {item}')
    remove_one = telebot.types.InlineKeyboardButton('-1—à—Ç', callback_data=f'-1 –ó–∞–∫—É—Å–∫–∞ {item}')
    cart = telebot.types.InlineKeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data=f'shoppingCart')
    markup_inline.add(remove_one, add_one)
    markup_inline.add(cart)

    try:
        pic = open(f"goods/knuts/{item}.jpg", 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                    f'\n{knuts[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n–¶–µ–Ω–∞: {knuts[item]["–¶–µ–Ω–∞"]}—Ä/—É–ø–∞–∫–æ–≤–∫–∞',
                              reply_markup=markup_inline,
                              parse_mode='html')
    except FileNotFoundError:
        pic = open(f'goods/knuts/–ü–∞–ª–æ—á–∫–∏.jpg', 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<i><b>{item}</b></i>'
                                                    f'\n{knuts[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n–¶–µ–Ω–∞: {knuts[item]["–¶–µ–Ω–∞"]}—Ä/—É–ø–∞–∫–æ–≤–∫–∞',
                              reply_markup=markup_inline,
                              parse_mode='html')


@pennij_bot.message_handler(func=lambda message: message.text in crackers)
def crackers_add(message):
    item = message.text
    markup_inline = telebot.types.InlineKeyboardMarkup()
    add_one = telebot.types.InlineKeyboardButton('+100–≥—Ä', callback_data=f'+100 –°—É—Ö–∞—Ä–∏–∫–∏ {item}')
    remove_one = telebot.types.InlineKeyboardButton('-100–≥—Ä', callback_data=f'-100 –°—É—Ö–∞—Ä–∏–∫–∏ {item}')
    cart = telebot.types.InlineKeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data=f'shoppingCart')
    markup_inline.add(remove_one, add_one)
    markup_inline.add(cart)

    try:
        pic = open(f"goods/crackers/{item}.jpg", 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                    f'\n{crackers[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n–û—Å—Ç—Ä–æ—Ç–∞: {crackers[item]["–û—Å—Ç—Ä–æ—Ç–∞"]}',
                              f'\n–¶–µ–Ω–∞: {crackers[item]["–¶–µ–Ω–∞"]}—Ä/100–≥—Ä',
                              reply_markup=markup_inline,
                              parse_mode='html')
    except FileNotFoundError:
        pic = open(f'goods/crackers/crackers.jpg', 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<i><b>{item}</b></i>'
                                                    f'\n{crackers[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n–û—Å—Ç—Ä–æ—Ç–∞: {crackers[item]["–û—Å—Ç—Ä–æ—Ç–∞"]}'
                                                    f'\n–¶–µ–Ω–∞: {crackers[item]["–¶–µ–Ω–∞"]}—Ä/100–≥—Ä',
                              reply_markup=markup_inline,
                              parse_mode='html')


@pennij_bot.message_handler(func=lambda message: message.text in fish)
def fish_add(message):
    item = message.text
    markup_inline = telebot.types.InlineKeyboardMarkup()
    if fish[item]["–§–∞—Å–æ–≤–∫–∞"] == "–ù–∞—Ä–∞–∑–≤–µ—Å":
        serving_option = "100–≥—Ä"
        add_gramms = telebot.types.InlineKeyboardButton('+100–≥—Ä', callback_data=f'+100 –†—ã–±–∫–∞ {item}')
        remove_gramms = telebot.types.InlineKeyboardButton('-100–≥—Ä', callback_data=f'-100 –†—ã–±–∫–∞ {item}')
        cart = telebot.types.InlineKeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data=f'shoppingCart')
        markup_inline.add(remove_gramms, add_gramms)
        markup_inline.add(cart)

        try:
            pic = open(f"goods/riba/{item}.jpg", 'rb')
            pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                        f'\n{fish[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                        f'\n–¶–µ–Ω–∞: <i>{int(fish[item]["–¶–µ–Ω–∞"] / 10)}—Ä</i>/'
                                                        f'<b>{serving_option}</b>',
                                  reply_markup=markup_inline,
                                  parse_mode='html')
        except FileNotFoundError:
            pic = open(f'goods/riba/—Ä—ã–±–∞.jpg', 'rb')
            pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                        f'\n{fish[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                        f'\n–¶–µ–Ω–∞: <i>{int(fish[item]["–¶–µ–Ω–∞"] / 10)}—Ä</i>/'
                                                        f'<b>{serving_option}</b>',
                                  reply_markup=markup_inline,
                                  parse_mode='html')
    elif fish[item]["–§–∞—Å–æ–≤–∫–∞"] == "–ü–æ—à—Ç—É—á–Ω–æ":
        serving_option = "1—à—Ç"
        if item == "–ë—ã—á–∫–∏":
            serving_option = "10—à—Ç(—Ñ–∞—Å–æ–≤–∞–Ω—ã–π)"
        add_gramms = telebot.types.InlineKeyboardButton('+1—à—Ç', callback_data=f'+1 –†—ã–±–∫–∞ {item}')
        remove_gramms = telebot.types.InlineKeyboardButton('-1—à—Ç', callback_data=f'-1 –†—ã–±–∫–∞ {item}')
        cart = telebot.types.InlineKeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data=f'shoppingCart')
        markup_inline.add(remove_gramms, add_gramms)
        markup_inline.add(cart)

        try:
            pic = open(f"goods/riba/{item}.jpg", 'rb')
            pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                        f'\n{fish[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                        f'\n–¶–µ–Ω–∞: <i>{fish[item]["–¶–µ–Ω–∞"]}—Ä</i>/<b>{serving_option}</b>',
                                  reply_markup=markup_inline,
                                  parse_mode='html')
        except FileNotFoundError:
            pic = open(f'goods/riba/—Ä—ã–±–∞.jpg', 'rb')
            pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                        f'\n{fish[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                        f'\n–¶–µ–Ω–∞: <i>{fish[item]["–¶–µ–Ω–∞"]}—Ä</i>/<b>{serving_option}</b>',
                                  reply_markup=markup_inline,
                                  parse_mode='html')


@pennij_bot.message_handler(func=lambda message: message.text in cheese)
def cheese_add(message):
    item = message.text
    markup_inline = telebot.types.InlineKeyboardMarkup()
    add_one = telebot.types.InlineKeyboardButton('+1—à—Ç', callback_data=f'+1 –°—ã—Ä {item}')
    remove_one = telebot.types.InlineKeyboardButton('-1—à—Ç', callback_data=f'-1 –°—ã—Ä {item}')
    cart = telebot.types.InlineKeyboardButton('üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data=f'shoppingCart')
    markup_inline.add(remove_one, add_one)
    markup_inline.add(cart)

    try:
        pic = open(f"goods/cheese/{item}.jpg", 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                    f'\n{cheese[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n–¶–µ–Ω–∞: <i>{cheese[item]["–¶–µ–Ω–∞"]}—Ä</i>/<b>1—à—Ç</b>',
                              reply_markup=markup_inline,
                              parse_mode='html')
    except FileNotFoundError:
        pic = open(f'goods/cheese/–ö–æ—Å–∏—á–∫–∞.jpg', 'rb')
        pennij_bot.send_photo(message.chat.id, pic, f'<b><i>{item}</i></b>'
                                                    f'\n{cheese[item]["–û–ø–∏—Å–∞–Ω–∏–µ"]}'
                                                    f'\n–¶–µ–Ω–∞: <i>{cheese[item]["–¶–µ–Ω–∞"]}—Ä</i>/<b>1—à—Ç</b>',
                              reply_markup=markup_inline,
                              parse_mode='html')


@pennij_bot.callback_query_handler(func=lambda callback: callback.data == "shoppingCart")
def show_cart_callback(callback):
    if callback.message.chat.id in cart:
        if cart[callback.message.chat.id]:
            pennij_bot.answer_callback_query(callback.id, f'–ò—Ç–æ–≥–æ: –¥–µ–Ω—å–≥–∏')
            pennij_bot.send_message(callback.message.chat.id,
                                    f'–¢–≤–æ—è –∫–æ—Ä–∑–∏–Ω–∞, {callback.from_user.first_name}: '
                                    f'\n{cart[callback.message.chat.id]}')
        else:
            pennij_bot.answer_callback_query(callback.id, f'–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')
    else:
        pennij_bot.answer_callback_query(callback.id, f'–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')


def show_cart_button(message):
    cartID = message.chat.id
    if cartID in cart:
        if cart[cartID]:
            cartChapter(message)
        else:
            pennij_bot.send_message(message.chat.id, f"–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")
    else:
        pennij_bot.send_message(message.chat.id, f"–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")


def cartChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")
    btn2 = types.KeyboardButton("‚úçÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É")
    btn3 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É")
    markup.row(btn1)
    markup.row(btn2, btn3)
    # stash = stashCheck(cart[message.chat.id])
    pennij_bot.send_message(message.chat.id, f'–¢–≤–æ—è –∫–æ—Ä–∑–∏–Ω–∞, {message.from_user.first_name}:'
                                             f'\n{cart[message.chat.id]}',
                            reply_markup=markup)


def stashCheck(query):
    """–ü–ò–í–û –°–ò–î–† –°–´–† –°–£–•–ê–†–ò–ö–ò –ó–ê–ö–£–°–ö–ê –†–´–ë–ö–ê"""
    for key, value in query.items():
        print(key, value)


@pennij_bot.callback_query_handler(func=lambda callback: True)
def purchase_callback(callback):
    global cart
    callback_request = callback.data.split()[0]
    print(f"{callback.data} –¥–ª—è {callback.from_user.first_name}  - callback_request")
    if callback_request == "+1":
        option = 1
        item = " ".join(callback.data.split()[1:])
        serving_option = "—à—Ç"
        add_to_cart(callback, item, option, serving_option)

    elif callback_request == "-1":
        if callback.message.chat.id in cart:
            option = 1
            item = " ".join(callback.data.split()[1:])
            serving_option = "—à—Ç"
            try:
                remove_from_cart(callback, item, option, serving_option)
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã: {cart[callback.message.chat.id][item]}')
            except KeyError:
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ')
        else:
            pennij_bot.answer_callback_query(callback.id, f'–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')

    if callback_request == "+1.0":
        option = 1.0
        item = " ".join(callback.data.split()[1:])
        serving_option = "–ª"
        add_to_cart(callback, item, option, serving_option)

    elif callback_request == "-1.0":
        if callback.message.chat.id in cart:
            option = 1.0
            item = " ".join(callback.data.split()[1:])
            serving_option = "–ª"
            try:
                remove_from_cart(callback, item, option, serving_option)
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã: {cart[callback.message.chat.id][item]}')
            except KeyError:
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ')
        else:
            pennij_bot.answer_callback_query(callback.id, f'–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')

    elif callback_request == "+1.5":
        option = 1.5
        item = " ".join(callback.data.split()[1:])
        serving_option = "–ª"
        add_to_cart(callback, item, option, serving_option)

    elif callback_request == "-1.5":
        if callback.message.chat.id in cart:
            option = 1.5
            item = " ".join(callback.data.split()[1:])
            serving_option = "–ª"
            try:
                remove_from_cart(callback, item, option, serving_option)
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã: {cart[callback.message.chat.id][item]}')
            except KeyError:
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ')
        else:
            pennij_bot.answer_callback_query(callback.id, f'–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')

    elif callback_request == "+100":
        option = 0.1
        item = " ".join(callback.data.split()[1:])
        serving_option = "–≥—Ä"
        add_to_cart(callback, item, option, serving_option)

    elif callback_request == "-100":
        if callback.message.chat.id in cart:
            option = 0.1
            item = " ".join(callback.data.split()[1:])
            serving_option = "–≥—Ä"
            try:
                remove_from_cart(callback, item, option, serving_option)
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã: {cart[callback.message.chat.id][item]}')
            except KeyError:
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ')
        else:
            pennij_bot.answer_callback_query(callback.id, f'–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')


def add_to_cart(callback, item, option, serving_option):
    if callback.message.chat.id not in cart:
        cart.update({callback.message.chat.id: {}})
        cart[callback.message.chat.id][item] = round(cart[callback.message.chat.id].get(item, 0) + option, 1)
        print(cart, item)
        if serving_option != "–≥—Ä":
            pennij_bot.answer_callback_query(callback.id,
                                             f'{item} –≤ –∫–æ—Ä–∑–∏–Ω–µ: {cart[callback.message.chat.id][item]}'
                                             f'{serving_option}')
        else:
            pennij_bot.answer_callback_query(callback.id,
                                             f'{item} –≤ –∫–æ—Ä–∑–∏–Ω–µ: {int(cart[callback.message.chat.id][item] * 1000)}'
                                             f'{serving_option}')
    else:
        cart[callback.message.chat.id][item] = round(cart[callback.message.chat.id].get(item, 0) + option, 1)
        print(cart, item)
        if serving_option != "–≥—Ä":
            pennij_bot.answer_callback_query(callback.id,
                                             f'{item} –≤ –∫–æ—Ä–∑–∏–Ω–µ: {cart[callback.message.chat.id][item]}'
                                             f'{serving_option}')
        else:
            pennij_bot.answer_callback_query(callback.id,
                                             f'{item} –≤ –∫–æ—Ä–∑–∏–Ω–µ: {int(cart[callback.message.chat.id][item] * 1000)}'
                                             f'{serving_option}')
        print(cart)


def remove_from_cart(callback, item, option, serving_option):
    try:
        rqst = cart[callback.message.chat.id].get(item)
        if rqst - option <= 0:
            del cart[callback.message.chat.id][item]
            pennij_bot.answer_callback_query(callback.id, f'{item} - —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã')
            print(cart, item)
        else:
            cart[callback.message.chat.id][item] = round(cart[callback.message.chat.id].get(item) - option, 1)
            if serving_option != "–≥—Ä":
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} –æ—Å—Ç–∞—Ç–æ–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ: '
                                                 f'{cart[callback.message.chat.id][item]}{serving_option}')
            else:
                pennij_bot.answer_callback_query(callback.id,
                                                 f'{item} –æ—Å—Ç–∞—Ç–æ–∫ –≤ –∫–æ—Ä–∑–∏–Ω–µ: '
                                                 f'{int(cart[callback.message.chat.id][item] * 1000)}'
                                                 f'{serving_option}')
        print(cart)
    except TypeError:
        pennij_bot.answer_callback_query(callback.id,
                                         f'{item} - –Ω–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ')


@pennij_bot.message_handler()
def user_messages(message):
    # –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if message.text == 'üçª –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç üêü':
        goodsChapter(message)
    elif message.text == 'üõü –ü–æ–º–æ—â—å':
        pennij_bot.send_message(message.chat.id, '–î–µ—Ä–∂–∏—Å—å, –±—Ä–∞—Ç!')
    elif message.text == 'üìÑ –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        pennij_bot.send_message(message.chat.id,
                                '–ó–∞–∫–∞–∑–∞—Ç—å –ø–∏–≤–æ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É:'
                                '\n<i>+79155633989</i> - <b>–ö–∏—Ä–∏–ª–ª</b>'
                                '\n'
                                '\n<b>–†–∞–∑–∞—Ä–∞–±–æ—Ç—á–∏–∫</b> - <u>@repredess</u>',
                                parse_mode='html')
    elif message.text == 'üõí –ö–æ—Ä–∑–∏–Ω–∞':
        show_cart_button(message)

    # –ö–Ω–æ–ø–∫–∞ "–ü–ò–í–û"
    elif message.text == '–ü–∏–≤–æ':
        chooseBeer(message)
    # elif message.text == '–í–∞–π—Å–±–µ—Ä–≥':
    #     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    #     btn1 = types.KeyboardButton('üõí –î–æ–±–∞–≤–∏—Ç—å "–í–∞–π—Å–±–µ—Ä–≥"')
    #     btn2 = types.KeyboardButton('‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –ø–∏–≤—É')
    #     markup.row(btn1, btn2)
    #     pic = open("goods/pivo/–í–∞–π—Å–±–µ—Ä–≥.jpg", 'rb')
    #     pennij_bot.send_photo(message.chat.id, pic, '–ù–µ–∂–Ω–æ–µ –ø–∏–≤–æ —Å —Å–ª–∏–≤–æ—á–Ω—ã–º –ø–æ—Å–ª–µ–≤–∫—É—Å–∏–µ–º. –ê–ª–∫–æ–≥–æ–ª—å 4.7.',
    #                           reply_markup=markup)
    elif message.text == '–°–∏–¥—Ä—ã':
        chooseSidre(message)

    elif message.text == '–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–µ':
        pennij_bot.send_message(message.chat.id, '–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–≥–æ –ø–æ–∫–∞ –Ω–µ—Ç \n–ú–∞–ª–æ —Ç–æ–≥–æ - —Ç—ã –µ—â–µ –Ω–µ –≤—ã–ø–∏–ª —à—Ç—Ä–∞—Ñ–Ω—É—é')

    # –ö–Ω–æ–ø–∫–∞ "–°–ù–ï–ö–ò"
    elif message.text == '–°–Ω–µ–∫–∏':
        chooseSnacs(message)
    # –í–∏–¥—ã —Å–Ω–µ–∫–æ–≤
    elif message.text == '–°—É—Ö–∞—Ä–∏–∫–∏':
        chooseCrackers(message)
    elif message.text == '–ö–Ω—É—Ç—ã –∏ –ø–∞–ª–æ—á–∫–∏':
        chooseSticks(message)
    elif message.text == '–†—ã–±–∫–∞':
        chooseFish(message)
    elif message.text == '–°—ã—Ä—ã':
        chooseCheese(message)

    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
        goodsChapter(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É':
        goodsChapter(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
        welcome(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –ø–∏–≤—É':
        chooseBeer(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–∏–¥—Ä–∞–º':
        chooseSidre(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Ä—ã–±–∫–µ':
        chooseFish(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å—É—Ö–∞—Ä–∏–∫–∞–º':
        chooseCrackers(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–Ω–µ–∫–∞–º':
        chooseSnacs(message)
    elif message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –ø–∞–ª–æ—á–∫–∞–º':
        chooseSticks(message)
    else:
        pennij_bot.reply_to(message, f'{random.choice(ANSWERS)} \n<b>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</b>: <u>/start</u>',
                            parse_mode='html')


def send_to_admin(message):
    id = message.from_user.id
    print(message)
    if id == ADMIN_ID:
        print(f"Admin is HEREEEü´°. Name {message.from_user.first_name}")
        pennij_bot.send_message(ADMIN_ID, "Its Admin's ID")
    elif id != ADMIN_ID:
        print(f'Somebody wanna find some. His ID = {id}. Name {message.from_user.first_name}')
        pennij_bot.send_message(ADMIN_ID, f'Somebody come to find for some beer. His ID = {id}')


def chooseSticks(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ú—è—Å–Ω—ã–µ –∫–Ω—É—Ç—ã")
    btn2 = types.KeyboardButton("–ü–∞–ª–æ—á–∫–∏ –∏–∑ —â—É–∫–∏")
    btn3 = types.KeyboardButton("–ü–∞–ª–æ—á–∫–∏ –∏–∑ —Ç—É–Ω—Ü–∞")
    btn4 = types.KeyboardButton("–ü–∞–ª–æ—á–∫–∏ –∏–∑ –ª–æ—Å–æ—Å—è")
    btn5 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–Ω–µ–∫–∞–º")
    markup.row(btn2, btn3, btn4)
    markup.row(btn1, btn5)

    pennij_bot.send_message(message.chat.id, '–¢–æ —á—Ç–æ –Ω–∞–¥–æ –∫ –ø–∏–≤—Éü§§\n–í—ã–±–∏—Ä–∞–π:', reply_markup=markup)


def chooseCrackers(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–î–µ—Ä–µ–≤–µ–Ω—Å–∫–∏–µ")
    btn2 = types.KeyboardButton("–¢–∞–π—Å–∫–∏–π –ø–µ—Ä–µ—Ü")
    btn3 = types.KeyboardButton("–°–ª–∏–≤–æ—á–Ω—ã–π —Å—ã—Ä")
    btn4 = types.KeyboardButton("–í–µ—Ç—á–∏–Ω–∞-—Å—ã—Ä")
    btn5 = types.KeyboardButton("–ê–¥–∂–∏–∫–∞")
    btn6 = types.KeyboardButton("–ß–µ—Å–Ω–æ—á–Ω—ã–π –º–∏–∫—Å")
    btn7 = types.KeyboardButton("–ö—Ä–∞–±")
    btn8 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Å–Ω–µ–∫–∞–º")
    markup.row(btn1, btn2, btn3)
    markup.row(btn4, btn5, btn6)
    markup.row(btn7, btn8)

    pennij_bot.send_message(message.chat.id, '–í—Å–µ–≥–¥–∞ –≤–∫—É—Å–Ω—ã–µ –∏ —Ö—Ä—É—Å—Ç—è—â–∏–µ', reply_markup=markup)


def chooseSnacs(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–°—É—Ö–∞—Ä–∏–∫–∏")
    btn2 = types.KeyboardButton("–°—ã—Ä—ã")
    btn3 = types.KeyboardButton("–ö–Ω—É—Ç—ã –∏ –ø–∞–ª–æ—á–∫–∏")
    btn4 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É")
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)

    pennij_bot.send_message(message.chat.id, '–ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µüòã', reply_markup=markup)


def chooseCheese(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ö–æ—Å–∏—á–∫–∞")
    btn2 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É")
    markup.row(btn1, btn2)

    pennij_bot.send_message(message.chat.id, '–£–ø—Ä—É–≥–∏–µ –∏ –≤–∫—É—Å–Ω—ã–µüòã \n–í—ã–±–∏—Ä–∞–π:', reply_markup=markup)


def chooseSidre(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ì–æ–ª—É–±–∞—è –ª–∞–≥—É–Ω–∞")
    btn2 = types.KeyboardButton("–ì–ª–∏–Ω—Ç–≤–µ–π–Ω")
    btn3 = types.KeyboardButton("–ú–∞–Ω–≥–æ-–º–∞—Ä–∞–∫—É–π—è")
    btn4 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É")
    markup.row(btn1, btn2)
    markup.row(btn3, btn4)

    pennij_bot.send_message(message.chat.id, '–ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µüòã \n–í—ã–±–∏—Ä–∞–π:', reply_markup=markup)


def chooseFish(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ö–æ—Ä—é—à–∫–∞")
    btn2 = types.KeyboardButton("–¢–∞—Ä–∞–Ω—å")
    btn3 = types.KeyboardButton("–ì–æ—Ä–±—É—à–∞ (–∫–æ–ø—á–µ–Ω–∞—è)")
    btn4 = types.KeyboardButton("–ì—É—Å—Ç–µ—Ä–∞")
    btn5 = types.KeyboardButton("–õ–µ—â")
    btn6 = types.KeyboardButton("–ë—ã—á–∫–∏")
    btn7 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É")
    markup.row(btn1, btn2, btn4, btn5)
    markup.row(btn3, btn6, btn7)

    pennij_bot.send_message(message.chat.id, '–í—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∞—è —Ä—ã–±–∫–∞', reply_markup=markup)


def chooseBeer(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–í–∞–π—Å–±–µ—Ä–≥")
    btn2 = types.KeyboardButton("–ì–∞–≥–∞—Ä–∏–Ω")
    btn3 = types.KeyboardButton("–®—Ç–æ—Ä–º–æ–≤–æ–µ")
    btn4 = types.KeyboardButton("–°—Ç–∞—É—Ç")
    btn5 = types.KeyboardButton("–î–æ–º–∞—à–Ω–µ–µ")
    btn6 = types.KeyboardButton("–†–µ–≥–∏–æ–Ω 82")
    btn7 = types.KeyboardButton("–ß–µ—à—Å–∫–æ–µ –≠–ª–∏—Ç–Ω–æ–µ")
    btn8 = types.KeyboardButton("–ú–æ—Ä—è–∫")
    btn9 = types.KeyboardButton("–•–æ—Ä–≤–∞—Ç—Å–∫–æ–µ")
    btn10 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç—É")
    markup.row(btn1, btn2, btn4, btn6)
    markup.row(btn9, btn3, btn5)
    markup.row(btn7, btn8, btn10)

    pennij_bot.send_message(message.chat.id, '–ü–∏–≤–æ –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Åüòâ \n–í—ã–±–∏—Ä–∞–π –ª—é–±–æ–µ:', reply_markup=markup)


def goodsChapter(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ü–∏–≤–æ")
    btn2 = types.KeyboardButton("–°–∏–¥—Ä—ã")
    btn3 = types.KeyboardButton("–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–µ")
    btn4 = types.KeyboardButton("–†—ã–±–∫–∞")
    btn5 = types.KeyboardButton("–°–Ω–µ–∫–∏")
    btn6 = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
    btn7 = types.KeyboardButton("üõí –ö–æ—Ä–∑–∏–Ω–∞")
    markup.row(btn1, btn2)
    markup.row(btn3, btn5)
    markup.row(btn7, btn4, btn6)

    if ANNOUNCEMENT:
        announcment(message, SAY)

    pennij_bot.send_message(message.chat.id, '–í—Å–µ–≥–æ –ª–∏—à—å –ª—É—á—à–µ–µ –ø–∏–≤–æ –≤ –≥–æ—Ä–æ–¥–µüòâ', reply_markup=markup)


def smartBottles(liters, price):
    # –ï—Å–ª–∏ –ª–∏—Ç—Ä–æ–≤ –Ω–µ 0
    if liters > 0:
        liters_price = price * liters
        print(f'{liters}–ª = {liters_price}—Ä')
        big_bottles = liters // 1.5
        small_bottles = False
        extrasmall_bottles = False
        remainder = liters % 1.5
        if remainder.is_integer():
            small_bottles = remainder
        else:
            extrasmall_bottles = remainder

        if (liters / 1.5).is_integer():
            bottles_price = int(big_bottles) * 15
            return f"1.5L x {int(big_bottles)} = {bottles_price}—Ä" \
                   f"\ntotal ammount: {bottles_price + liters_price}—Ä"
        elif small_bottles:
            if big_bottles:
                bottles_price = (int(big_bottles) + int(small_bottles)) * 15
                return f"1.5L x {int(big_bottles)} \n1L x {int(small_bottles)} = {bottles_price}—Ä" \
                       f"\ntotal ammount: {bottles_price + liters_price}—Ä"
            else:
                bottles_price = int(small_bottles) * 15
                return f"1L x {int(small_bottles)} = {bottles_price}—Ä" \
                       f"\ntotal ammount: {bottles_price + liters_price}—Ä"
        elif extrasmall_bottles:
            bottles_price = int(big_bottles) * 15 + 13
            return f"1.5L x {int(big_bottles)} \n0.5L x 1 = {bottles_price}—Ä" \
                   f"\ntotal ammount: {bottles_price + liters_price}—Ä"
    # –ï—Å–ª–∏ –ª–∏—Ç—Ä–æ–≤ 0
    else:
        return '–õ–∏—Ç—Ä–æ–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å 0'


def announcment(message, say):
    tell = random.choice(say)
    pennij_bot.send_message(message.chat.id, f'{tell}', parse_mode='html')
    print(f'–û–≥–ª–∞—Å–∏–ª "{tell}" –¥–ª—è {message.from_user.first_name}')


def go_infinity():
    print("some troubles with network")
    try:
        # https://stackoverflow.com/questions/68739567/socket-timeout-on-telegram-bot-polling
        pennij_bot.infinity_polling(timeout=10, long_polling_timeout=5)
        pennij_bot.send_message(message_chat.id, "–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–µ—Ä–æ–º... –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç–∫—É")
        # pennij_bot.polling(none_stop=True)
    except requests.exceptions.ConnectionError:
        pennij_bot.infinity_polling(timeout=10, long_polling_timeout=5)
    time.sleep(5)


try:
    # https://stackoverflow.com/questions/68739567/socket-timeout-on-telegram-bot-polling
    pennij_bot.infinity_polling(timeout=10, long_polling_timeout=5)
except requests.exceptions.ConnectionError:
    print("–¢—Ä–∞–±–ª—ã ConnectionError")
    pennij_bot.infinity_polling(timeout=10, long_polling_timeout=5)
except requests.exceptions.ReadTimeout:
    print("–¢—Ä–∞–±–ª—ã ReadTimeout")
    pennij_bot.infinity_polling(timeout=10, long_polling_timeout=5)
except telebot.apihelper.ApiTelegramException:
    print("–¢—Ä–∞–±–ª—ã ReadTimeout")
    pennij_bot.infinity_polling(timeout=10, long_polling_timeout=5)

# –°—Ç–∞–Ω–¥–∞—Ä—Ç –∫–æ—Ç–æ—Ä—ã–π —É –º–µ–Ω—è –±—ã–ª:
# pennij_bot.polling(none_stop=True)
