# ANSWERS = ["–ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ç–æüòâ",
#            "–•–æ—Ä–æ—à–µ–µ —Ñ–æ—Ç–æ",
#            "–¢—ã –≤–æ –º–Ω–µ —Ü–µ–Ω–∏—Ç–µ–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É–≤–∏–¥–µ–ª!?",
#            "–ë—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å —á—Ç–æ —è —ç—Ç–æ–≥–æ –Ω–µ –≤–∏–¥–µ–ª...",
#            "–ì–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π"]
#
# URL = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
#
# @pennij_bot.message_handler(commands=["start"])
# def main(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     btn1 = types.KeyboardButton('/check')
#     btn2 = types.KeyboardButton('/site')
#     btn3 = types.KeyboardButton('/help')
#     markup.row(btn1)
#     markup.row(btn2, btn3)
#
#     pennij_bot.send_message(message.chat.id,
#                             f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>! –¢—É—Ç –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏–≤–æ –∏ —Ä—ã–±–∫—É ;) "
#                             f"\n–£–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã: <u>/help</u>",
#                             parse_mode='html', reply_markup=markup)
#
#     # pennij_bot.register_next_step_handler(message, on_click)
#
#
# # def on_click(message):
# #     markup = types.InlineKeyboardMarkup()
# #     if message.text == '–ù–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç':
# #         pennij_bot.send_message(message.chat.id, "–í–æ—Ç –Ω–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç")
# #         pennij_bot.register_next_step_handler(message, on_click)
# #     elif message.text == '–ù–∞—à —Å–∞–π—Ç':
# #         markup.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=URL))
# #         pennij_bot.send_message(message.chat.id, "–ù–∞—à —Å–∞–π—Ç:", reply_markup=markup)
# #         pennij_bot.register_next_step_handler(message, on_click)
# #     elif message.text == '–ü–æ–º–æ—â—å':
# #         pennij_bot.send_message(message.chat.id, "<b>–ù–∞–∂–º–∏ –º–µ–Ω—è</b> >>> <i>/help</i>", parse_mode="html")
# #         pennij_bot.register_next_step_handler(message, on_click)
# #     else:
# #         pennij_bot.send_message(message.chat.id,
# #                                 "<b>–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ</b>: <u>/start</u> \n<b>–í—ã–±—Ä–∞—Ç—å –Ω–∏—à—Ç—è—á–∫–æ–≤</b>: <u>/check</u>",
# #                                 parse_mode='html')
#
# @pennij_bot.message_handler(commands=["check"])
# def check(message):
#     markup = types.InlineKeyboardMarkup()
#     markup.add(types.InlineKeyboardButton("–ü–∏–≤–æ", callback_data='pivo'))
#     markup.add(types.InlineKeyboardButton("–ë–µ–∑–∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–µ", callback_data='bezalco'))
#     markup.add(types.InlineKeyboardButton("–†—ã–±–∫–∞", callback_data='ribka'))
#     markup.add(types.InlineKeyboardButton("–°–Ω–µ–∫–∏", callback_data='snacs'))
#
#     pennij_bot.send_message(message.chat.id, "–í–æ—Ç –Ω–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:")
#
#
# @pennij_bot.message_handler(commands=["site", "website"])
# def redirect_to_site(message):
#     markup = types.InlineKeyboardMarkup()
#     markup.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=URL))
#     pennij_bot.send_message(message.chat.id, "–ê—Ö –¥–∞, –≤–æ—Ç —Å—Å—ã–ª–æ—á–∫–∞:", reply_markup=markup)
#     webbrowser.open(URL)
#
#
# @pennij_bot.message_handler(commands=["help"])
# def get_help(message):
#     pennij_bot.send_message(message.chat.id,
#                             "<b>–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ</b>: <u>/start</u> \n<b>–í—ã–±—Ä–∞—Ç—å –Ω–∏—à—Ç—è—á–∫–æ–≤</b>: <u>/check</u>",
#                             parse_mode='html')
#
#
# @pennij_bot.callback_query_handler(func=lambda callback: True)
# def callback_message(callback):
#     if callback.data == "delete":
#         pennij_bot.delete_message(callback.message.chat.id, callback.message.message_id - 1)
#     elif callback.data == "edit":
#         pennij_bot.edit_message_text('–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ', callback.message.chat.id, callback.message.message_id)
#     elif callback.data == "–ü–∏–≤–æ":
#         pass
#
#
# @pennij_bot.message_handler(commands=["info"])
# def get_info(message):
#     pennij_bot.send_message(message.chat.id,
#                             message)
#
#
# @pennij_bot.message_handler(content_types=["photo"])
# def get_photo(message):
#     markup = types.InlineKeyboardMarkup(resize_keyboard=True)
#     btn1 = types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url=URL)
#     markup.row(btn1)
#     btn2 = types.InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ", callback_data='delete')
#     btn3 = types.InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data='edit')
#     markup.row(btn2, btn3)
#     answer = random.choice(ANSWERS)
#     pennij_bot.reply_to(message, answer, reply_markup=markup)
#
#
# @pennij_bot.message_handler()
# def user_messages(message):
#     if message.text.lower() == 'id':
#         pennij_bot.reply_to(message, f'–¢–≤–æ–π ID: {message.from_user.id}')
#     elif message.text.lower() == '–±–∞–ª–ª—ã':
#         pennij_bot.send_message(message.chat.id, '–ü–æ–∫–∞ 0')
#     else:
#         pennij_bot.reply_to(message, '–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –æ —á–µ–º —Ç—ãüôÉ \n<b>–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</b>: <u>/start</u>',
#                             parse_mode='html')
#
# # pennij_bot.infinity_polling()